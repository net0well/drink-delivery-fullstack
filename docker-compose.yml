version: '3.9'
services:
  backend:
    container_name: delivery-backend
    build: ./back-end
    ports:
      - 3001:3001
    platform: linux/x86_64
    working_dir: /back-end
    # Caso queira que o container esteja atualizado durante o desenvolvimento, sem que você precise ficar fazendo down e up dos containers, descomente as 3 linhas abaixo
    command: dev
    volumes:
      - ./back-end/src:/back-end/src
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - API_PORT=3001
      - HOSTNAME=db
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASSWORD=password
      - MYSQL_DB_NAME=delivery-app
      - EVAL_ALWAYS_RESTORE_DEV_DB=true
    healthcheck:
      test: [ "CMD", "lsof", "-t", "-i:3001" ]
      timeout: 10s
      retries: 5
  db:
    image: mysql:8.0.21
    container_name: db
    platform: linux/x86_64
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
    restart: 'always'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE
  # frontend:
  #   container_name: delivery-frontend
  #   build: ./front-end
  #   ports:
  #     - 3000:3000
  #   platform: linux/x86_64
  #   working_dir: /front-end
  #   depends_on:
  #     backend:
  #       condition: service_healthy
  #   # Os `healthcheck` devem garantir que a aplicação
  #   # está operacional, antes de liberar o container
  #   volumes:
  #     - ./front-end/src:/front-end/src
  #   healthcheck:
  #     test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
  #     timeout: 10s
  #     retries: 5
